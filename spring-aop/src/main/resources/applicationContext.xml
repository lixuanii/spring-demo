<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--    注册bean-->
    <bean id="userService" class="com.yunfan.service.UserServiceImpl"/>
    <bean id="beforeLog" class="com.yunfan.log.BeforeLog"/>
    <bean id="afterLog" class="com.yunfan.log.AfterLog"/>

    <!--    方式1 定义类 配置aop-->
<!--    <aop:config>-->
<!--        &lt;!&ndash;        切入点 execution表达式，execution(类型，包名，类名，方法名，参数) === 要执行的位置    &ndash;&gt;-->
<!--        <aop:pointcut id="pointcut" expression="execution(* com.yunfan.service.UserServiceImpl.*(..))"/>-->
<!--        &lt;!&ndash;        执行环绕增强  advice-ref:引用  pointcut-ref:你要切入的点  (把afterLog类切入到xxx方法)&ndash;&gt;-->
<!--        <aop:advisor advice-ref="afterLog" pointcut-ref="pointcut"/>-->
<!--        <aop:advisor advice-ref="beforeLog" pointcut-ref="pointcut"/>-->
<!--    </aop:config>-->

    <!--    方式2 自定义切面-->
<!--    <bean id="diy" class="com.yunfan.diy.DiyPointCut"/>-->
<!--    <aop:config>-->
<!--        &lt;!&ndash;    自定义切面  ref=引入的类&ndash;&gt;-->
<!--        <aop:aspect ref="diy">-->
<!--            &lt;!&ndash;        切入点&ndash;&gt;-->
<!--            <aop:pointcut id="point" expression="execution(* com.yunfan.service.UserServiceImpl.*(..))"/>-->
<!--            &lt;!&ndash;        通知&ndash;&gt;-->
<!--            <aop:before method="before" pointcut-ref="point"/>-->
<!--            <aop:after method="after" pointcut-ref="point"/>-->
<!--        </aop:aspect>-->
<!--    </aop:config>-->

        <!--    方式3 注解实现aop-->
        <bean id="annotationPointCut" class="com.yunfan.diy.AnnotationPointCut"/>
        <!--    开启注解支持 (aspectj-autoproxy 切面自动代理)-->
        <aop:aspectj-autoproxy/>

</beans>